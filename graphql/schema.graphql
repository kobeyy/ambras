"A date string with format `Y-m-d`, e.g. `2011-05-23`."
scalar Date @scalar(class: "Nuwave\\Lighthouse\\Schema\\Types\\Scalars\\Date")

"A datetime string with format `Y-m-d H:i:s`, e.g. `2018-05-23 13:43:32`."
scalar DateTime @scalar(class: "Nuwave\\Lighthouse\\Schema\\Types\\Scalars\\DateTime")

type Query {
    """Get all users"""
    users: [User!]! @paginate(defaultCount: 10)
    """Get User by id"""
    user(id: ID @eq): User @find
    """Get all posts"""
    posts: [Post!]! @paginate(defaultCount: 10)
    post(id: Int! @eq): Post @find
    me: User! @guard @auth
}

# TODO add more mutation, this are just a few examples. Not all CRUD operations are configured yet.
type Mutation {
    createComment(post_id: ID! @rename(attribute: "on_post"), body: String!): Comment @create
    createPost(title: String!, body: String!, slug: String!, active: Boolean = true): Post
        @create
        @guard
        @inject(context: "user.id", name: "author_id")
    updateUserName(name: String): User
        @update
        @guard
        @inject(context: "user.id", name: "id")
}

type User {
    id: ID!
    name: String!
    email: String!
    created_at: DateTime!
    updated_at: DateTime!
    posts: [Post!]! @hasMany
}

type Post {
    id: ID!
    title: String!
    body: String!
    created_at: DateTime!
    updated_at: DateTime
    slug: String
    active: Boolean
    author: User! @belongsTo
    comments: [Comment!]! @hasMany
}

type Comment {
    id: ID!
    body: String!
    post: Post! @belongsTo
}
